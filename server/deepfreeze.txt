1) Testing. 5 PostMan and 5 Jest Tests. Cypress (Jordan).

2) Styling. Profile subcomponents, chessboard subcomponents (chat feature and moveList)

3) Cleanup Test Data.

EndGame Logic:
3) Resign button - Redirect Users to profile component and save game history.  Update game_history and create moves.

4) If checkmate notation is recognized, save game history and redirect users to profile. 

5) Under any other condition, the game will end in a draw. Delete game_history. ComponentWillUnmount.

6) Talking Points for presentation and rotating order.
** Spinning up server for demonstration of chessboard.





app.get('/api/leaderboard', async (req, res) => {
    const db = req.app.get('db')

    let leaders = db.leaderboard()

    res.status(200).send(leaders)
})


let showTurn = arr => {
	let moves = []
	for (i=0; i <arr.length; i++) {
		for (key in arr[i]) {
			if (key == 'san') {
				let something = Object.values(arr[i].san).join('')
				moves.push(something)
			}
		} 
	}
	return moves
}
select * from game_history
where loser = $1 or winner = $1;
-- order by date desc;

select * from moves
where gameid = $1

app.get('/api/myGames', ctrl.getMyGames)

getMyGames: async (req, res) => {
        const db = req.app.get('db')
        let {user} = req.session

        let myGames = await db.my_games(user)
        res.status(200).send(myGames)
    },s












